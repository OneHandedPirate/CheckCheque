from datetime import datetime

from src.config import DATE_FORMAT
from src.services import utils


class RenderService:
    # TODO: make method to render individual checks

    @staticmethod
    def render_menu(start: bool, name: str = "default") -> str:
        res = ""
        if start:
            res += f"üññ –ü—Ä–∏–≤–µ—Ç, {name}. –Ø <b>CheckCheque</b> –±–æ—Ç, –≤–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        res += (
            "\nüî∏–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞\n"
            "üî∏–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –≥–æ–¥/–º–µ—Å—è—Ü/–Ω–µ–¥–µ–ª—é\n"
            "üî∏–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —á–µ–∫–æ–≤\n"
            "üî∏–í—ã–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î\n\n"
            "–î–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–∂–º–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É."
        )
        return res

    @staticmethod
    def render_statistics(items: list, period: str) -> str:
        months = utils.MONTHS

        if not items:
            return "–ó–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ—Ç."
        res = ""
        match period:
            case "year":
                for month in items:
                    res += f"<b>{months[month[2]]}</b>\n–ü–æ—Ö–æ–¥–æ–≤ –≤ –º–∞–≥–∞–∑: {month[1]}\n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ: {month[0]}\n\n"
                res += f"------------------------------\n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∑–∞ –≥–æ–¥: {sum([month[0] for month in items]):.2f}\n"
                return res
            case "month":
                res = f'{months[str(datetime.now().month).rjust(2, "0")]}\n\n'
                summ = 0
                for indx, item in enumerate(items, 1):
                    summ += item[2]
                    res += (
                        f"<b>{item[0]}</b>\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item[1]}\n–°—É–º–º–∞: {item[2]}\n\n"
                    )
                res += f"-------------------------\n<b>–ò—Ç–æ–≥–æ</b>: {summ:.2f}"

                return res
            case "week":
                n, summ, total = 0, 0, 0
                for indx, item in enumerate(items):
                    if indx == 0 or indx > 0 and items[indx - 1][4] != item[4]:
                        if indx != 0:
                            res += f"------------------\n<b>–°—É–º–º–∞: </b> {summ:.2f}\n------------------\n\n"
                            total += summ
                            summ = 0
                        date, time = item[4].split()
                        date = ".".join(date.split("-")[::-1])
                        res += f"üóìÔ∏è {date}\nüïì {time}\n\n"
                        n = 0

                    n += 1
                    if item[2] != 1:
                        res += f"<b>{n}) {item[0]}</b>\n–¶–µ–Ω–∞ –∑–∞ –µ–¥.: {item[1]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item[2]}\n–°—É–º–º–∞: {item[3]}\n\n"

                    else:
                        res += f"<b>{n}) {item[0]}</b>\n–¶–µ–Ω–∞: {item[3]}\n\n"
                    summ += float(item[3])
                res += f"------------------\n<b>–°—É–º–º–∞: </b> {summ:.2f}\n------------------\n\n"
                total += summ
                res += f"-----------------\n<b>–ò—Ç–æ–≥–æ</b>: {total:.2f}\n"
                return res
            case "last":
                date, time = (
                    datetime.strptime(items[0][4], "%Y-%m-%d %H:%M")
                    .strftime(DATE_FORMAT)
                    .split()
                )
                res = f"üóìÔ∏è{date}\nüïì{time}\n\n"
                for item in items:
                    res += f"<b>{item[0]}</b>\n–¶–µ–Ω–∞ –∑–∞ –µ–¥.: {item[1]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item[2]}\n–°—É–º–º–∞: {item[3]}\n\n"
                res += f"---------------------\n<b>–ò—Ç–æ–≥–æ</b>: {sum([item[3] for item in items])}\n---------------------\n"
                return res
